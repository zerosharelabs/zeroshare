services:
  zeroshare:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      ARGON2_SECRET: ${ARGON2_SECRET}
      DOMAIN: ${DOMAIN}
      EMAIL: ${EMAIL}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - zeroshare_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ssl_certificates:/etc/letsencrypt

  database:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - zeroshare_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  ssl_certificates:
    driver: local
  postgres_data:
    driver: local
networks:
  zeroshare_network:
    driver: bridge
